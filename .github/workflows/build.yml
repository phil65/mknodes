name: Build

on: [push, pull_request]

env:
    OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}

jobs:
    test:
        runs-on: ubuntu-latest
        strategy:
            matrix:
                python_version: ["3.12", "3.13"]

        steps:
            - uses: actions/checkout@v4
              with:
                  fetch-depth: 0
            - name: Set up Python
              uses: actions/setup-python@v5
              with:
                  python-version: ${{ matrix.python_version }}
            - name: Setup Graphviz
              uses: ts-graphviz/setup-graphviz@v2
            - name: Serve Ollama Model
              uses: phil65/ollama-github-action@v1
              with:
                  model: "smollm2:360m"
            - name: Install uv
              uses: yezz123/setup-uv@v4
            - name: Install dependencies
              run: |
                  uv sync --all-extras
            - name: Lint and typecheck
              run: |
                  uv run ruff check .
                  uv run ruff format --check .
                  uv run mypy mknodes/
            - name: Test
              run: |
                  uv run pytest --cov-report=xml
            - uses: codecov/codecov-action@v5
              with:
                  token: ${{ secrets.CODECOV_TOKEN }}
                  fail_ci_if_error: true
                  verbose: true

    release:
        runs-on: ubuntu-latest
        needs: test
        if: startsWith(github.ref, 'refs/tags/')
        permissions:
            # IMPORTANT: this permission is mandatory for trusted publishing
            id-token: write
            contents: write
        steps:
            - uses: actions/checkout@v4
            - name: Set up Python
              uses: actions/setup-python@v5
              with:
                  python-version: "3.12"
            - name: Install uv
              uses: yezz123/setup-uv@v4
            - name: Build
              run: |
                  uv build
            - name: Publish on PyPI
              env:
                  UV_PUBLISH_TOKEN: ${{ secrets.UV_PUBLISH_TOKEN }}
              run: |
                  uv publish
            - name: Create release
              uses: ncipollo/release-action@v1
              with:
                  body: ${{ github.event.head_commit.message }}
                  artifacts: dist/*.whl,dist/*.tar.gz
                  token: ${{ secrets.GITHUB_TOKEN }}
